# import * from './generated/prisma.graphql'

type Query {
  me: User
}

type Mutation {
  signin(data: UserCreateInput): Payload
  signout: Payload
  signS3(filename: String!, filetype: String!): S3Payload
  createVideo(data: VideoCreateInput): VideoPayload
  updateVideo(id: ID!, data: VideoCreateInput): VideoPayload
  emailVideo(data: EmailVideoInput): Payload
}

type User {
  id: ID!
  googleID: String!
  email: String!
  name: String!
  image: String!
  googlePhotoAT: String
  googlePhotoRT: String
  videos: [Video]
  role: Role!
  createdAt: DateTime
}

type Video {
  id: ID!
  videoURL: String!
  imageURL: String
  title: String!
  description: String
  tags: [String]
  isPublished: Boolean!
  isPublic: Boolean!
  user: User
  createdAt: DateTime!
}

type Payload {
  success: Boolean
}

type S3Payload {
  success: Boolean
  requestURL: String
  fileURL: String
}

type VideoPayload {
  success: Boolean
  video: Video
}

enum Role {
  USER
  ADMIN
}

input EmailVideoInput {
  to: String!
  title: String!
  message: String!
  videoID: String!
  imageURL: String!
}
